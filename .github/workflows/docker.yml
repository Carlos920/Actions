name: '源码构建Docker镜像'

on:
  push: # push 时触发, 主要是为了测试配置有没有问题
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    environment: docker_hub
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: QiuChenly
            repoName: QQFlacMusicDownloader
            dockerImageName: qq_flac_music_downloader
            branchName: main
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: azraias/${{ matrix.dockerImageName }}
      - name: Check New Commit
        run: |
          commit=$(curl -sL https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}/commits/${{ matrix.branchName }} |grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" |head -1 | cut -d\/ -f5)
          wget -O ${{ github.workspace }}/README.md https://github.com/Carlos920/Actions/blob/docker/README.md?raw=true
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')

          echo "commit=$commit"
          echo "lastCommit=$lastCommit"
          echo "$commit" != "$lastCommit"
          # if [ "$commit" != "$lastCommit" ] || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          # fi
      - name: Set up QEMU
        if: ${{ env.commit }}
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: ${{ env.commit }}
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        if: ${{ env.commit }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Checkout Source Code
        if: ${{ env.commit }}
        shell: bash
        run: |
          git clone https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}.git ${{ matrix.repoName }}
          cd ${{ matrix.repoName }}
          wget -O .dockerignore https://github.com/Carlos920/Actions/blob/docker/${{ matrix.userName }}_${{ matrix.repoName }}/.dockerignore?raw=true
          wget -O Dockerfile https://github.com/Carlos920/Actions/blob/docker/${{ matrix.userName }}_${{ matrix.repoName }}/Dockerfile?raw=true
      # - name: Build and push Docker images latest
      #   if: ${{ env.commit }}
      #   working-directory: ${{ matrix.repoName }}
      #   run: |
      #     docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.dockerImageName }}:latest .
      #     docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.dockerImageName }}:latest
      - name: Build and push
        id: docker_build
        if: ${{ env.commit }}
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.repoName }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.dockerImageName }}:latest
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/386,linux/arm/v6,linux/s390x
      - name: Commit Tag
        if: ${{ env.commit }}
        run: |
          rm -rf ${{ matrix.repoName }}
          sed -i '/url =/d' ./.git/config
          git config --local user.name "github-actions[bot]"
          git config --local user.email "32257015+github-actions[bot]@users.noreply.github.com"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GP_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase origin docker
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          git add --all
          git commit -m "${{ env.commit }}"
          git push -u origin docker
