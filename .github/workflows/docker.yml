name: 'Build Docker'

on:
  push:
    # branches:
      # - docker
    paths-ignore:
      - '.github/workflows/**'
  schedule:
    - cron: 35 15 * * 0
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    environment: docker_hub
    strategy:
      fail-fast: false
      matrix:
        include:
          - enable: false
            gitclone: true
            userName: QiuChenlyOpenSource
            repoName: QQFlacMusicDownloader
            dockerImageName: qq_flac_music_downloader
            branchName: main
          - enable: true
            gitclone: false
            userName: tailscale
            repoName: tailscale
            dockerImageName: derper
            branchName: main
          - enable: true
            gitclone: true
            userName: vvbbnn00
            repoName: WARP-Clash-API
            dockerImageName: WARP-Clash-API
            branchName: master
    steps:
      - name: Checkout
        if: ${{ matrix.enable }} 
        uses: actions/checkout@v3
        with:
          ref: docker
          fetch-depth: 0
      - name: Check New Commit
        if: ${{ matrix.enable }} 
        run: |
          commit=$(curl -sL https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}/commits/${{ matrix.branchName }} |grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" |head -1 | cut -d\/ -f5)
          wget -O ${{ github.workspace }}/README.md https://github.com/${{ github.repository }}/blob/docker/README.md?raw=true
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')
          if [ "$commit" != "$lastCommit" ] || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "lastCommit=$lastCommit" >> $GITHUB_ENV
            echo "commit_short=${commit:0:7}" >> $GITHUB_ENV
          fi
      - name: Checkout Source Code
        if: ${{ env.commit && matrix.enable && matrix.gitclone }} 
        shell: bash
        run: |
          git clone https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}.git ${{ matrix.repoName }}
      - name: Overwrite Dockerfile
        if: ${{ env.commit && matrix.enable }} 
        shell: bash
        run: |
          if [ ! -d "${{ matrix.repoName }}" ]; then
            echo "${{ matrix.repoName }} folder does not exist, creating..."
            mkdir ${{ matrix.repoName }}
          fi
          path=${{ matrix.userName }}_${{ matrix.repoName }}
          if [ -f "$path/.dockerignore" ]; then
            echo "dockerignore exists"
            cp $path/.dockerignore ${{ matrix.repoName }}/
            #wget -O .dockerignore https://github.com/${{ github.repository }}/blob/docker/${{ matrix.userName }}_${{ matrix.repoName }}/.dockerignore?raw=true
          fi
          if [ -f "$path/Dockerfile" ]; then
            echo "Dockerfile exists"
            cp $path/Dockerfile ${{ matrix.repoName }}/
            #wget -O Dockerfile https://github.com/${{ github.repository }}/blob/docker/${{ matrix.userName }}_${{ matrix.repoName }}/Dockerfile?raw=true
          fi
        
      - name: List workspace directory
        if: ${{ env.commit && matrix.enable }} 
        run: ls -l ${{ matrix.repoName }} 
      - name: Set up QEMU
        if: ${{ env.commit && matrix.enable }} 
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: ${{ env.commit && matrix.enable }} 
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        if: ${{ env.commit && matrix.enable }} 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        id: docker_build
        if: ${{ env.commit && matrix.enable }} 
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.repoName }}
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.dockerImageName }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.dockerImageName }}:${{ env.commit_short }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/386
      - name: Commit Tag
        if: ${{ env.commit && matrix.enable }} 
        run: |
          if [ "${{ env.commit }}" != "${{ env.lastCommit }}" ]; then
            rm -rf ${{ matrix.repoName }}
            sed -i '/url =/d' ./.git/config
            git config --local user.name "github-actions[bot]"
            git config --local user.email "32257015+github-actions[bot]@users.noreply.github.com"
            git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GP_TOKEN }}@github.com/${{ github.repository }}"
            git pull --rebase origin docker
            sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
            git add --all
            git commit -m "${{ env.commit }}"
            git push -u origin docker
          fi
